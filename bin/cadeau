#!/usr/bin/env node
// -*- mode: javascript -*-

/* Load dependencies */
var fs = require('fs-extra');
var yaml = require('js-yaml');
var cadeau = require('..');
var path = require('path');

/* Check the arguments.
   TODO: Add argparse support at some point. */
if (process.argv.length!=4) {
    throw "Usage: "+process.argv[1]+" slides.yaml output.html";
}

/* Pull out arguments */
var src = process.argv[2];
var dst = process.argv[3];

var watch = true;

var generate = null;

var watched = {};

var watchFile = function(f) {
    if (watch) {
	if (f in watched) return;
	fs.watch(f, generate);
	watched[f] = true;
    }
}

generate = function () {
    /* Read the presentation file */
    var raw = fs.readFileSync(src, "utf8");
    /* Transform it into a data structure. */
    var data = yaml.load(raw, { filename: src });


    if (watch) { console.log("Generating presentation files to "+dst); }
    var context = cadeau.processSlides(data, watchFile);

    /* Make the directory, if we didn't already. */
    fs.mkdirsSync(dst);
    /* Run the code generator for the backend engine */
    cadeau.generate(context, dst);
    /* Copy presentation specific resources.

       Note, this is deliberatly done second to allow the presentation
       to insert its own resources to overwrite those added by
       the backend engine.
    */
    cadeau.copyResources(data, dst);
}

watchFile(src);

generate();

if (watch) { console.log("Watching for changes"); }
